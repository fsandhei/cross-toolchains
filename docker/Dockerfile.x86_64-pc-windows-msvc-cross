FROM ubuntu:22.04
ARG DEBIAN_FRONTEND=noninteractive

COPY common.sh lib.sh /
RUN /common.sh

COPY cmake.sh /
RUN /cmake.sh

COPY xargo.sh /
RUN /xargo.sh

# run these in separate steps, so we can cache MSVC between all images.
COPY cross-toolchains/docker/msvc-wine.sh /
RUN /msvc-wine.sh
#
# COPY wine.sh /
# RUN /wine.sh

# need windows-style perl for paths
COPY cross-toolchains/docker/perl.sh /
RUN /perl.sh

ARG ARCH=x64
COPY cross-toolchains/docker/msvc-wine-symlink.sh /
RUN /msvc-wine-symlink.sh $ARCH

# run-detectors are responsible for calling the correct interpreter for exe
# files. For some reason it does not work inside a docker container (it works
# fine in the host). So we replace the usual paths of run-detectors to run wine
# directly. This only affects the guest, we are not messing up with the host.
#
# See /usr/share/doc/binfmt-support/detectors
# RUN mkdir -p /usr/lib/binfmt-support/ && \
#     rm -f /usr/lib/binfmt-support/run-detectors /usr/bin/run-detectors && \
#     ln -s /usr/bin/wine /usr/lib/binfmt-support/run-detectors && \
#     ln -s /usr/bin/wine /usr/bin/run-detectors

# COPY cross-toolchains/docker/msvc-windows-entry.sh /
# ENTRYPOINT ["/msvc-windows-entry.sh"]

RUN apt-get update && apt-get install --install-recommends --assume-yes clang lld clang-tools
RUN ln -s /usr/bin/clang-cl-14 /usr/bin/clang-cl
RUN ln -s /usr/bin/llvm-lib-14 /usr/bin/llvm-lib
RUN ln -s /usr/bin/llvm-dlltool-14 /usr/bin/llvm-dlltool

ENV CROSS_SYSROOT=/opt/msvc/vc/tools/msvc/latest
ENV CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_LINKER=lld-link \
    CC_x86_64_pc_windows_msvc=clang-cl \
    CXX_x86_64_pc_windows_msvc=clang-cl \
    BINDGEN_EXTRA_CLANG_ARGS_x86_64_pc_windows_msvc="\
                                -I/opt/msvc/vc/tools/msvc/latest/atlmfc/include \
                                -I/opt/msvc/vc/tools/msvc/latest/include \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/shared \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/ucrt \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/um \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/winrt \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/km" \
    CL_FLAGS_x86_64_pc_windows_msvc="\
                                /imsvc/opt/msvc/vc/tools/msvc/latest/atlmfc/include \
                                /imsvc/opt/msvc/vc/tools/msvc/latest/include \
                                /imsvc/opt/msvc/kits/10/include/10.0.22621.0/shared \
                                /imsvc/opt/msvc/kits/10/include/10.0.22621.0/ucrt \
                                /imsvc/opt/msvc/kits/10/include/10.0.22621.0/um \
                                /imsvc/opt/msvc/kits/10/include/10.0.22621.0/winrt \
                                /imsvc/opt/msvc/kits/10/include/10.0.22621.0/km" \
    CFLAGS_x86_64_pc_windows_msvc="\
                                -I/opt/msvc/vc/tools/msvc/latest/atlmfc/include \
                                -I/opt/msvc/vc/tools/msvc/latest/include \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/shared \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/ucrt \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/um \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/winrt \
                                -I/opt/msvc/kits/10/include/10.0.22621.0/km" \
    RUSTFLAGS="-Lnative=/opt/msvc/vc/tools/msvc/14.43.34808/atlmfc/lib/x64 -Lnative=/opt/msvc/vc/tools/msvc/14.43.34808/lib/x64 -Lnative=/opt/msvc/kits/10/lib/10.0.22621.0/ucrt/x64 -Lnative=/opt/msvc/kits/10/lib/10.0.22621.0/um/x64 -Lnative=/opt/msvc/kits/10/lib/10.0.22621.0/km/x64" \
    VSINSTALLDIR="/opt/msvc" \
    VCINSTALLDIR="/opt/msvc/vc" \
    VSCMD_ARG_TGT_ARCH=$ARCH
